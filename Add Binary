Link: https://oj.leetcode.com/problems/add-binary/

Given two binary strings, return their sum (also a binary string).

For example,
a = "11"
b = "1"
Return "100".

class Solution:
    # @param a, a string
    # @param b, a string
    # @return a string
    def addBinary(self, a, b):
        a = [ord(c) - ord('0') for c in a][::-1]
        b = [ord(c) - ord('0') for c in b][::-1]
        if (len(a) < len(b)):
            a, b = b, a
        flag = 0
        for i in range(len(a)):
            if (i < len(b)):
                a[i] += b[i]
            a[i] += flag
            flag = a[i] // 2
            a[i] %= 2
        if flag:
            a.append(1)
        return ''.join([chr(c + ord('0')) for c in a][::-1])
        
class Solution:
    # @param a, a string
    # @param b, a string
    # @return a string
    def addBinary(self, a, b):
        if len(a) < len(b):
            a, b = b, a
        pa = len(a) - 1
        pb = len(b) - 1
        res = ''
        carry = 0
        while pb >= 0:
            num = int(a[pa]) + int(b[pb]) + carry
            res = str(num % 2) + res
            carry = num / 2
            pa -= 1
            pb -= 1
        while pa >= 0:
            num = int(a[pa]) + carry
            res = str(num % 2) + res
            carry = num / 2
            pa -= 1
        if carry == 1:
            res = '1' + res
        return res
