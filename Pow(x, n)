Link: https://oj.leetcode.com/problems/powx-n/

Implement pow(x, n).

class Solution:
    # @param x, a float
    # @param n, a integer
    # @return a float
    def pow(self, x, n):
        if n==0:
            return 1
        elif n==1:
            return x
        elif n%2:
            return pow(x*x,n/2)*x
        else:
            return pow(x*x,n/2)
            
class Solution:
    # @param x, a float
    # @param n, a integer
    # @return a float
    def pow(self, x, n):
        if x == 0:
            return 0
        if n == 0:
            return 1
        elif n < 0:
            res = x * pow(x, -(n + 1))
            res = 1.0 / res
            return res
        else:
            res = pow(x, n / 2)
            res = res * res
            if n % 2:
                res = res * x
            return res
