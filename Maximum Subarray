Link: http://lintcode.com/en/problem/maximum-subarray/#

Given an array of integers, find a contiguous subarray which has the largest sum.

Note
The subarray should contain at least one number

Example
For example, given the array [−2,2,−3,4,−1,2,1,−5,3], the contiguous subarray [4,−1,2,1] has the largest sum = 6.

Challenge
Can you do it in time complexity O(n)?


class Solution:
    """
    @param nums: A list of integers
    @return: An integer denote the sum of maximum subarray
    """
    def maxSubArray(self, nums):
        # write your code here
        if not nums or len(nums) == 0:
            return 0
        res = - 2**32
        sums = 0
        for num in nums:
            sums += num
            res = max(res, sums)
            sums = max(sums, 0)
        return res
        
        
