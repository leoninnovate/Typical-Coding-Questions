Link: http://www.lintcode.com/en/problem/longest-common-substring/
Given two strings, find the longest common substring.

Return the length of it.

Note
The characters in substring should occur continiously in original string. This is different with subsequnce.

class Solution:
    # @param A, B: Two string.
    # @return: the length of the longest common substring.
    def longestCommonSubstring(self, A, B):
        # write your code here
        if A is None or B is None:
            return 0
        m = len(A)
        n = len(B)
        dp = [[0] * (n + 1) for i in xrange(m + 1)]
        res = 0
        for i in xrange(m):
            for j in xrange(n):
                if A[i] == B[j]:
                    dp[i + 1][j + 1] = dp[i][j] + 1
                else:
                    dp[i + 1][j + 1] = 0
                res = max(res, dp[i + 1][j + 1])
        return res
