Implement a function to return the index of the first occurrence of a substring 
within a string, or -1 if the substring is not present in the string

input: coconut, nutt
output: 4

input:  coconut, o
output: 1

input: coconut, apple
output: -1

# simple way to deal with it:   s1.index(s2); s1.find(s2)
def (self, s1, s2):
    # s2 is the substring
    m = len(s1)
    n = len(s2)
    ind = -1
    i = 0
    while i < m:
        tmp = i
        j = 0
        while j < n:
            if i < m and s1[i] == s2[j]:
                i += 1
                j += 1
            else:
                break
        if j == n - 1:
            ind = tmp
            break
        else:
            i = tmp + 1
            
    return ind
    
Time complexity: O(m*n)


I needed a version of the string.index(sub) function which returns a list of indices of ALL occurances of a substring in the string.

def allindices(string, sub, listindex=[], offset=0):
    i = string.find(sub, offset)
    while i >= 0:
        listindex.append(i)
        i = string.find(sub, i + 1)
    return listindex
