Copyright © 2015 LeetCode
Question link: https://oj.leetcode.com/problems/search-insert-position/

Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0

class Solution:
    """
    @param A : a list of integers
    @param target : an integer to be inserted
    @return : an integer
    """
    def searchInsert(self, A, target):
        # write your code here
        if A is None or len(A) == 0:
            return 0
        if A[0] > target:
            return 0
        start = 0
        end = len(A) - 1
        # find the last number less than target
        while start + 1 < end:
            mid = start + (end - start)/2
            if A[mid] == target:
                return mid
            elif A[mid] < target:
                start = mid
            else:
                end = mid
        if A[end] == target:
            return end
        if A[end] < target:
            return end + 1
        if A[start] == target:
            return start
        return start + 1
