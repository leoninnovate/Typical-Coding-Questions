Copyright Â© 2015 LeetCode
Question link: https://oj.leetcode.com/problems/remove-duplicates-from-sorted-list-ii/

Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.

"""
Definition of ListNode
class ListNode(object):

    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""
class Solution:
    """
    @param head: A ListNode
    @return: A ListNode
    """
    def deleteDuplicates(self, head):
        # write your code here
        if not (head and head.next) :
            return head
            
        dummy = ListNode(0)
        dummy.next = head
        head = dummy
        
        while head.next and head.next.next:
            if head.next.val == head.next.next.val:
                num = head.next.val
                while head.next and head.next.val == num:
                    head.next = head.next.next
            else:
                head = head.next
                
        return dummy.next
