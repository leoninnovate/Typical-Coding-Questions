Link: http://lintcode.com/en/problem/single-number-ii/

Given 3*n + 1 numbers, every numbers occurs triple times except one, find it.

Example
Given [1,1,2,3,3,3,2,2,4,1] return 4

Challenge
One-pass, constant exstra space

class Solution:
    """
	@param A : An integer array
	@return : An integer
    """
    def singleNumberII(self, A):
        # write your code here
        if not A or len(A) == 0:
            return 0
        maps = {}
        for num in A:
            if num in maps:
                maps[num] += 1
            else:
                maps[num] = 1
        
        for item in maps:
            if maps[item] == 1:
                return item

class Solution:
    """
	@param A : An integer array
	@return : An integer
    """
    def singleNumberII(self, A):
        # write your code here
        if not A or len(A) == 0:
            return 0
        res = 0
        size = len(A)
        bits = [0] * 32
        for i in xrange(32):
            for j in xrange(size):
                bits[i] += A[j] >> i & 1
                bits[i] %= 3
            res |= bits[i] << i
        return res
